<!doctype html>
<html lang="ru">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>EngRead v2(Адаптивное чтение )</title>

<style>
 :root { --bg:#0f172a; --card:#111827; --ink:#e5e7eb; --muted:cyan; --accent:#60a5fa; }
 html,body {height:100%;}
 body {margin:0; background:var(--bg); color:var(--ink); font:18px/1.4 system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial;}
 header {padding:10px 16px; border-bottom:1px solid #1f2937; display:flex; gap:8px; align-items:center;}
header h1 {display:none}
 header .spacer {flex:1;}
 button, select {background:black; color:var(--ink); border:1px solid #374151; border-radius:10px; padding:8px 10px; cursor:pointer;}
 button:hover {border-color:red; background: darkgreen;}
 button[disabled]{opacity:.5; cursor:not-allowed}
 .grid {display:grid; grid-template-columns: 1fr 1fr; gap:12px; padding:12px;}
 .grid.full-right { grid-template-columns: 0 1fr; }
 .card {background:var(--card); border:1px solid #1f2937; border-radius:14px; padding:12px;}
 .toolbar {display:flex; flex-wrap:wrap; gap:8px; align-items:center;}
 textarea {width:100%; min-height:120px; resize:vertical; background:#0b1220; color:var(--ink); border:1px solid #1f2937; border-radius:10px; padding:10px;}
 #id_text {height: 300px;font-size:18px;}
 #id_out {min-height:300px; white-space:pre-wrap; word-wrap:break-word;}
 .wb {padding:1px 2px; border-radius:6px; cursor:default;background:rgba(96,165,250,.14);}
 .uw {color:white;}
 .lw {color:greenyellow;}
 .aw {color:coral; }
 .nw {color:magenta;}
 .rw {color:deepskyblue;}
 .tr {color:gold; }
 .mrow {margin-bottom:6px;}
 .small {color:var(--muted); font-size:14px;}
 .pill {padding:2px 8px; border-radius:999px; border:1px dashed #374151;}

 .modal{position:fixed;left:0;right:0;top:0;bottom:0;display:flex; align-items:center;justify-content:center;background:rgba(0,0,0,.6)}
 .modal .box {background:#0b1220;border:1px solid #374151; padding:16px;border-radius:12px;width:420px;color:var(--ink)}
 .modal input, .modal textarea {width:100%;margin-top:8px; padding:8px; border-radius:8px; border:1px solid #374151; background:#071029;color:var(--ink)}
 .modal .row {display:flex; gap:8px; justify-content:flex-end; margin-top:12px}

 #id_wordsList {max-width:94%;margin-top:20px;margin-left:3%;}
 .word-block {margin:8px 0;padding:6px;border-bottom:1px solid #ccc;}
 .word-title {font-weight:bold;font-size: 1.1em;cursor: pointer;display:inline-block;margin-right:10px;color:aquamarine;}
 .word-title.lw {color:coral;}
 .word-tr {display:block;max-height:3em;overflow:hidden; transition:max-height 0.2s ease;margin-top:4px;}
 .word-tr.expanded {max-height: 1000px;}
 .btn-more {display:inline-block;margin-left:5px;font-size:0.9em; color:blue;cursor:pointer;text-decoration:underline;}
</style>
<script src='d3000.txt'></script>
</head>

<body>
<noscript>
<h1>....JS MUST BE ENABLE....</h1>
<h1>....А БЕЗ СКРИПТОВ ТУТ НИЧЁ НЕ РАБОТАЕТ....</h1>
</noscript>

<script>
const RATE_SPEECH=0.95; //скорость озвучки меняем тут

function checkCompatibility(){ //проверка браузера и пишем юзеру проблемы.
  const features = [
    { name: 'Map (ES6)', check: 'Map' in window },
    { name: 'Promise (ES6)', check: 'Promise' in window },
    { name: 'async/await (ES7)', check: typeof (async () => {}) === 'function' },
    { name: 'querySelector', check: 'querySelector' in document },
    { name: 'Element.closest', check: !!Element.prototype.closest },
    { name: 'localStorage', check: 'localStorage' in window },
    { name: 'indexedDB', check: 'indexedDB' in window },
    { name: 'SpeechSynthesis (озвучка)', check: 'speechSynthesis' in window },
    { name: 'IntersectionObserver (ленивый рендер)', check: 'IntersectionObserver' in window },
    { name: 'fetch (для онлайн-загрузки)', check: 'fetch' in window },
  ];

  const unsupported = features.filter(f => !f.check).map(f => f.name);
  const screenWidth = window.innerWidth;

  let message = '';
  if (unsupported.length > 0) {
    message += 'Ваш браузер слишком старый или не поддерживает некоторые функции. Программа может работать с ошибками или не работать вовсе.\n\n';
    message += 'Неподдержанные функции: ' + unsupported.join(', ') + '.\n\n';
    message += 'Рекомендуем обновить браузер до:\n- Chrome 58+ (Android 58+)\n- Firefox 55+\n- Safari 12.1+ (iOS 12.2+)\n- Edge 79+\n- Opera 45+\n';
    message += 'Если это старый IE или Safari <10, обновите или используйте другой браузер.';
    alert(message);
    // Можно добавить return false; чтобы остановить init(), но лучше позволить попробовать
  } else console.log('браузер потянет');

  if (screenWidth < 600) {
    alert('Экран слишком маленький (ширина ' + screenWidth + 'px). Программа предназначена для ПК или планшетов. На телефоне может не влезть интерфейс — попробуйте повернуть устройство или использовать больший экран.');
  } else if (screenWidth < 768) {
    console.warn('Экран маловат (' + screenWidth + 'px) — может быть тесно на планшете.');
  }
}
checkCompatibility();

</script>

<header>
  <h1>EngLearner</h1>
  <button id="btnSpeak" title="озвучить выделенный текст">Озвучить</button>
  <label class="small">Меню:
    <select id="id_tools">
      <option value="load-lw-LS" selected>Загр список изуч.слов из ЛокСт</option>
      <option value="load-lw-file">Загр список изуч.слов из файла(замена)</option>
      <option value="add-lw-file">Загр список изуч.слов из файла(добавить)</option>
      <option value="save-lw-file">Сохр список изуч.слов в файл</option>
      <option value="add-aw">Добавить все активные слова в список изуч.слов</option>
      <option value="load-big">Загр бол.словарь в inxDB 7мб (перезаписать)</option>
      <option value="show-big" disabled>Показать перевод слов из бол.словаря</option>
      <option value="gen-text">Генерировать текст через чат бота GPT</option>
    </select>
  </label>
    <label class="small">Режим:
    <select id="id_mode">
      <option value="text">Перевод текста</option>
      <option value="all">Слово+перевод (все)</option>
      <option value="only" selected>Слово+перевод (невыученные)</option>
    </select>
  </label>

  <label class="small">Уровень словаря:
    <select id="id_dict">
      <option value="d600.txt">600 базовый А1</option>
      <option value="d3000.txt" selected>NGSL-3000 А2</option>
      <option value="d7000.txt">7000 (5k+формы+инт) В2</option>
    </select>
  </label>
  <button id="btnToggleLayout" title="Развернуть правую панель">↔</button>
</header>

<div class="grid" id="id_mainGrid">
  <section class="card" id="id_leftCard">
    <textarea id="id_text" placeholder="Вставьте английский текст сюда" spellcheck="false"></textarea>
    <div class="small">Подсказка: двойной клик по слову → добавить в выученные. Выделение + озвучка.</div>
    <textarea id="id_aw" placeholder="Вставьте Активные слова. 10-50 штук, разделитель (,;/n)" spellcheck="false"></textarea>
  </section>

  <section class="card">
    <div class="toolbar mrow" id="id_rightCard">
      <span class="pill small">Найдено слов: <span id="id_statAll">0</span></span>
      <span class="pill small">Выученные: <span id="id_statLW">0</span></span>
      <span class="pill small">Активные: <span id="id_statAW">0</span></span>
      <span class="pill small">Редкие: <span id="id_statRW">0</span></span>
    </div>
    <div id="id_out" class="out"></div>
  </section>
</div>
<div id="id_modal" style="display:none" class="modal" aria-hidden="true">
  <div class="box">
    <div><strong id="id_modal-word">word</strong></div>
    <div class="small">Введите перевод:</div>
    <input id="id_modal-input" placeholder="перевод" />
    <div class="row">
      <button id="id_modal-cancel">Отмена</button>
      <button id="id_modal-save">Сохранить</button>
    </div>
  </div>
</div>
<div id="id_wordsList"></div>
<script>

function null_dict(){ return Object.create(null); } //пока не нужен
function null_map() { return new Map();}
// new Map(), .set(k,v) .get(k) .has(k) .size .clear() /for([k,v] of m)log(k+'|'+v)

var gm_words = null_map(); //выученные=1 активные=2 невыуч=0
var gm_dict = null_map(); //словарь юзера
var gm_dict2 = null_map(); //перевод каждого слова получаем фоном из индБД или онлайн
var gm_sost = null_map();//составные слова при загрузке маленького словаря
var gm_busy = null_map();//флаги занято для всех

// утилиты упрощают код
function log(s,obj){if(s)console.log(''+s);if(obj)console.log(obj);}
function tm1(s){console.time('timer');}
function tm2(s){console.timeEnd('timer');}
function el(id){var e=document.getElementById(id);if(!e)log('el: нет id='+id);return e;}
function put_t(id,text){var e=el(id);if(e)e.textContent=''+text;}//экранирует &<>
function get_t(id){var e=el(id);if(e)return e.textContent; return '';}
function len_obj(dd){var key,n=0; if(typeof(dd)=='object'){for(key in dd)n++;} return n;}
function get_keys_map(dd){return Array.from(dd.keys());}
function get_lw(){var k,v,m=[];for([k,v] of gm_words)if(v==1)m.push(k);return m;}
function get_aw(){var k,v,m=[];for([k,v] of gm_words)if(v==2)m.push(k);return m;}
function replace_all(s,a,b){s=''+s; a=''+a; b=''+b; //для небольших + числа
 if(s)if(a)if(b){return s.split(a).join(b);}
 return s;
}
//задержка перед выполнением чтобы часто не запускалось
function debounce(fn,wait){var t;return function(){var that = this; clearTimeout(t); t = setTimeout((e)=>fn.apply(that), wait);}
}
function norm_key(k){k=''+k; k=k.trim().toLowerCase().replace(/ /g,'-');return k;}

function t_split(t){ //список слов через ;/n
 t=''+t; t=t.trim();//antinull
 t=t.replace(/\r/g,'\n').replace(/\t/g,' ').replace(/[ ]+/g,' ').replace(/;/g,'\n');t=t.split('\n');
 return t.map((s)=>s.trim()).filter((s)=>s!='');
}
function firstUp(s){return s.charAt(0).toUpperCase()+s.substring(1);}

function norm_text(t){var k,v;
 t=''+t; t=t.trim();//antinull
 if(t.length>50000){alert('текст больше 50к, обрезаю!');t=t.substring(0,50000);}

 //áàâä éèê íìî óòôö úùûü ñç (для слов типа café)
 t=t.replace(/á|à|â|ä/g,'a').replace(/é|è|ê/g,'e').replace(/í|ì|î/g,'i');
 t=t.replace(/ó|ò|ô|ö/g,'o').replace(/ú|ù|û|ü/g,'u').replace(/ñ/g,'n').replace(/ç/g,'c');

 t=t.replace(/‘|’|‛|′|‵/g,"'");//\u2018|\u2019|\u201B|\u2032|\u2035
 t=t.replace(/“|”|‟|″|‶/g,'"');//\u201C|\u201D|\u201F|\u2033|\u2036
 t=t.replace(/–|—|‒|‐/g,'-');//\u2013|\u2014|\u2012|\u2010
 t=t.replace(/\u00A0/g,' '); //хитрый пробел
 t=t.replace(/\r/g,'\n').replace(/\t/g,' ').replace(/[ ]+/g,' ').replace(/[\n]+/g,'\n');
 for([k,v] of gm_sost){ //k='look-for'; v='look for' /составные через - для ясности
   if(t.indexOf(v)>=0)t=t.split(v).join(k);//=replace(/v/g,k)
   v=firstUp(v); k=firstUp(k);
   if(t.indexOf(v)>=0)t=t.split(v).join(k);//Look for -> Look-for
 }
 return t;
}
function get_mode(){return el('id_mode').value;}

//динамическая загрузка скрипта только из надежных источников!
//со своего сайта или локально, с внешних опасно! (вирусов накидают и хакнут)
function loadScript(vPathScript, fCallBack, arg1, arg2){
  if(gm_busy.get('load_script')==1)alert('loadScript: занято');
  log('Загружаем скрипт='+vPathScript);gm_busy.set('load_script',1);
  var script = document.createElement('script');
  script.async = true;
  script.onload = (e)=>{
    log('Скрипт загружен:'+vPathScript); gm_busy.set('load_script',0);
    if(fCallBack){setTimeout((e)=>{fCallBack(arg1,arg2);},0);}
  }
  //нет этого файла, может удалили, флаг занято сбросим, но будет работать неправильно
  script.onerror = (e)=>{alert('loadScript: Ошибка загрузки:'+vPathScript);gm_busy.set('load_script',0);}
  script.src = vPathScript;
  document.head.appendChild(script);
}
function saveToFile(vFileName,vText){// сохр в файл (скачивание браузером в /downloads)
  try{
    var blob = new Blob([vText], { type: 'text/plain;charset=utf-8' });
    var a = document.createElement('a'); a.href = URL.createObjectURL(blob);
    a.download = vFileName; document.body.appendChild(a); a.click();
    document.body.removeChild(a); URL.revokeObjectURL(a.href);
    log('Файл сохранён на диск?');return 1;
  }catch(e){alert('Ошибка сохранения файла: '+e); return 0;}
}
function loadFromFile(fCallBack){//загрузка файла
  // Скрытый input для выбора файла
  var fileInput = document.createElement('input');
  fileInput.type = 'file'; fileInput.accept='.txt'; //.js можно проще загрузить
  fileInput.style.display = 'none';document.body.appendChild(fileInput);
  fileInput.addEventListener('change', (e)=>{// Обработка выбранного файла
    const f = e.target.files[0];
    if(!f){alert('Файл не выбран');return;}
    const reader = new FileReader();
    reader.onerror = (e)=>{log('err load file='+e);}
    reader.onload = (e)=>{
      const v=''+e.target.result;
      log('file loaded='+v.length);
      if(fCallBack){setTimeout((e)=>{fCallBack(v);}, 0);}
    }
    reader.readAsText(f, "UTF-8");
  });
  fileInput.click();
}
function copy_cb(text){//копировать в буфер обмена по клику (async)
  try{ navigator.clipboard.writeText(text).then((e)=>{alert('Текст скопирован в буфер обмена, вставьте в переводчик');});
  } catch(e){alert('Не удалось скопировать — выделите текст и нажмите Ctrl+C '+e);}
}
// ===== TTS (Web Speech API) =====
function text_speak(){
  if('speechSynthesis' in window){
  if(speechSynthesis.speaking){speechSynthesis.cancel();return;} //=stop
    const sel = window.getSelection().toString().trim();
    const txt = sel || el('id_text').value;
    if(!txt) return alert('Нет текста для озвучки');
    const u = new SpeechSynthesisUtterance(txt);
    u.lang='en-US'; u.rate = RATE_SPEECH; u.pitch = 1.0; u.volume = 1.0;
    speechSynthesis.cancel(); speechSynthesis.speak(u);
  } else {alert('TTS озвучка не поддерживается');}
}
//===== indexedDB ======
var g_IDB=null; //global

async function openIDB(){
  return new Promise((ok,er)=>{
    if(g_IDB){log('IDB уже открыта');ok(1);return;}
    const r=indexedDB.open('MyDB',1);
    r.onupgradeneeded= (e)=>{
      const db=e.target.result;
      if(!db.objectStoreNames.contains('store'))db.createObjectStore('store');
    }
    r.onsuccess= (e)=>{g_IDB=e.target.result; ok(1);return;}  //=resolve
    r.onerror= (e)=>{alert('error openIDB='+e); er(0);return;} //=reject
  });
}
async function saveToIDB(key,val){//один раз
  return new Promise((ok,er)=>{
    openIDB().then((e)=>{
      var tx = g_IDB.transaction('store', 'readwrite');
      var store = tx.objectStore('store');
      var rq = store.put(val,key);
      rq.onsuccess = (e)=>{log(key+'|'+val+' записано в IDB');ok(1);return;} //=resolve
      rq.onerror = (e)=>{alert('ошибка1 записи в IDB'+e);er(0);return;} //=reject
    }).catch((e)=>{alert('ошибка2 записи в IDB'+e);er(0);return;}); //=reject
  });
}
var g_num; //global
async function readIDB(){ //gm_dict2 меньше 3к слов в тексте 10к/ ???-если тут не нашла
  return new Promise((ok,er)=>{
    if(gm_busy.get('readIDB')==1){log('readIDB: занято');er(0);return;}
    log('начинаем чтение из IndexedDB');gm_busy.set('readIDB',1);
    openIDB().then((e)=>{
      var tx=g_IDB.transaction('store','readonly');
      var store=tx.objectStore('store');g_num=0;
      var k,v; for([k,v] of gm_dict2)if(v==''){//повторно не ищем
        const rq=store.get(k); const key=k; //без этого не работает!
        rq.onsuccess= (e)=>{gm_dict2.set(key,rq.result || '???'); g_num++;}
        rq.onerror = (e)=>{alert('ошибка1 чтения в IDB='+e);er(0);return;} //=reject
      }
      tx.oncomplete= (e)=>{log('ok readIDB='+g_num); gm_busy.set('readIDB',0);ok(1);return;}
      //при ошибке флаг занято не сбрасываем, чтобы больше не вызывали, надо разбираться
      tx.onerror= (e)=>{alert('ошибка2 чтения в IDB='+e); er(0);return;} //=reject
    }).catch((e)=>{alert('ошибка3 чтения в IDB'+e);er(0);return;}); //=reject
  });
}
//=== словари и списки: загрузка/запись ===
//грузим мал.словарь уровня 1,2,3 (цель выучить его, если в тексте много слов не из него, значит текст слишком сложный, надо искать для тек уровня)
function load_dict(){var d,m,s,k,v; //на входе текст в g_dict= word|tr/n..
  if(!window['g_dict']){alert('g_dict нет');return 0;}
  m=g_dict.split('\n'); g_dict=null; //free mem
  gm_dict.clear(); //можно не чистить, тогда догрузятся и перезапишут на новый перевод
  for(s of m)if(s){
    [k,v]=s.split('|'); k=norm_key(k); v= v.trim() || '?';
    if(k){
      if(gm_dict.has(k))log('err dict? dubl_key='+k); else gm_dict.set(k,v);//уник массив ключ-знач, дубли на объединять!
      if(k.indexOf('-')>0){v=k.replace(/-/g,' ');gm_sost.set(k,v);}//wake-up возможны накладки, но так понятней что это одно слово по смыслу!
    }
  }
  log('словарь загружен='+gm_dict.size); render();//обновить разметку
}
function load2_lw_file(txt){//текст из файла загружен
  txt=''+txt; //=String() но короче
  log('load2_lw_from_file='+txt.length);
  txt=txt.replace('g_words=`','').replace('`;','');
  if(gm_busy.get('gm_words')==1){txt+='\n'+get_lw().join('\n');} //добавляем
  window['g_words']=txt;//если нет g_words, то создаем.
  load_lw(); //text->dict из файла или внеш.скрипта
}
//загр списка выуч слов из файла/скрипта на входе g_words - строка , на выходе gm_words
function load_lw(){var d,m,k,v,t;
  if(!window['g_words']){alert('ошибка: нет g_words');return 0;}
  m=t_split(g_words); gm_words.clear(); g_words=null;//free mem
  for(k of m){k=norm_key(k); if(k)gm_words.set(k,1);}//уник массив ключ-знач=1
  log('выученные слова загружены='+gm_words.size);
  render();//обновить разметку
  return 1;
}
function load_aw(){var d,m,k,v,t;// активные слова из поля, можно запятые
  t=''+el('id_aw').value; t=t.replace(/,/g,';'); m=t_split(t);
  v=0; for(k of m){k=norm_key(k); if(k)gm_words.set(k,2); v++;} //выученные 1->2
  log('активные слова загружены='+v);
  render();//обновить разметку
}
function lw_to_LS(){//пишем список изуч слов в локалсторе автоматически = gm_words
 var m=get_lw(); if(m.length>7000){alert('слишком много слов знаешь, ЛокСт не резиновая!');}
 try {localStorage.setItem('my_words',m.join('\n'));log('Записано в ЛокСт='+m.length);}
 catch(e){alert('lw_to_LS: ошибка или лимит localStorage!'+e);}
}
function lw_from_LS(){var t,m,w;//читаем из локалсторе (стираем текущие и активные)
 gm_words.clear();
 try{
  t=localStorage.getItem('my_words');
  if(t){m=t.split('\n');for(w of m)if(w)gm_words.set(w,1);}//уник ключ=1
  alert('Загружено из ЛокСт '+gm_words.size+' выуч.слов');
  render();//обновить разметку
 } catch(e){alert('lw_from_LS: Ошибка='+e);}
}

//===== рендер текста =======
//textContent сам экранирует как надо, это для innerHTML, (кавычки менять не обязательно)
function toHtml(s){return s.replace(/\&/g,"&amp;").replace(/\</g,"&lt;").replace(/\>/g,"&gt;").replace(/\"/g,"&quot;").replace(/\`/g, "'");}
//для Title все кавычки убираем для безопасности title="text("+js+")text" в переводах может быть всё что угодно, словари скачаны из инета
function toAttr(s){return s.replace(/\&/g,"&amp;").replace(/\</g,"&lt;").replace(/\>/g,"&gt;").replace(/\"|'|`/g,"/");}
function get_tr(word){var v; // в словаре только маленькие + составные через -
  v=gm_dict.get(word); if(v)return v;//словарь тек уровня юзера
  v=gm_dict2.get(word); if(v){v=v.split(',').slice(0,3).join(','); if(v!='???')gm_dict.set(word,v);return v;} //из бол.словаря
  return '??'; //сам ищи или надо вкл словарь уровня выше
}
function render1(){ var txt,htm,t,tt,key,p,pp,cs,i; //280ms
  txt=''+el('id_text').value; if(!txt){el('id_out').innerHTML='';return 0;}
  txt=' '+norm_text(txt)+' '; //замена составных через пробел на дефис
  var tr_mode=get_mode();
  if(tr_mode=='text'){//показать весь перевод если получен в фоне или открыть в гугл тр
    put_t('id_out','общий перевод из прилож гугл-переводчик офлайн/онлайн(не сделано)');
    copy_cb(txt);
    if(window.navigator.onLine)alert('пробуем онлайн через сайт гугл переводчик');
    window.open('https://translate.google.com/?sl=en&tl=ru&text='+encodeURIComponent(txt));
    return;
  }
  if(gm_busy.get('render-1-2')){log('render-1-2 занят');return 0;}
  gm_busy.set('render-1-2',1); //ставим занято на оба рендера
  log('начинаем render1'); tm1();

 // Разбиваем, сохраняя знаки препинания и пробелы как отдельные токены
  tt=txt.match(/([A-Za-z'-]+|[^A-Za-z'-]+)/g) || [];
  htm='';
  for(t of tt){
    key='';if(t!='-')if(t!="'")if(t.match(/([A-Za-z'-]+)/g)!=null){key=norm_key(t);}
    t=toHtml(t); //может там <>&
    if(key){//это слово, тут норм ключ мал букв и сост -
      p=get_tr(key); pp='('+p+')'; if(p=='??'){gm_words.set(key,3);}
      if(!gm_dict2.has(key))gm_dict2.set(key,'');//все слова сюда если нету от прошлого рендера
      cs='ww uw'; i=gm_words.get(key);
      if(i==1){cs='ww lw'; if(tr_mode=='only')pp='';} //выуч
      if(i==2){cs='ww aw'; if(tr_mode=='only')pp='';} //актив
      if(i==3){cs='ww nw';}// ищем в бол.сл фоном (имя или редкое)
      if(i==4){cs='ww rw';}
      t='<span class="wb"><span class="'+cs+'" title="'+toAttr(p)+'">'+t+'</span>·<span class="tr">'+toHtml(pp)+'</span></span>';
    }//проверить по быстродействию и с элементами
    htm+=t;
  }
  el('id_out').innerHTML=htm;
  //перевод пока пусто, после рендера2 3 слова или ???
  //класс nw заменится на rw чтобы не искать снова, а ещё рендер1 на uw т.к перевод в кэше
  log('render1 закончен, уникальных слов='+gm_dict2.size); tm2();
  //запускаем фоном подробный перевод для всех слов из текста в gm_dict2
  stat_words(); //статистика слов после рендера1 (неточная)
  setTimeout(render2,500);//запускаем рендер 2 этап. флаг занято не сбрасываем!
}
function stat_words(){ var lw=0,aw=0,rw=0,k,v;
  for([k,v] of gm_dict2){v=gm_words.get(k); if(v==1)lw++; if(v==2)aw++; if(v==4)rw++;}
  put_t('id_statAll',gm_dict2.size);put_t('id_statLW',lw);put_t('id_statAW',aw);
  put_t('id_statRW',rw);
}
//получить подр.перевод всех слов фоном, а когда придет, то найти все ?? подставить и разрешить кнопку показать список слов и подробный перевод.
function render2(){
  if(gm_dict2.size==0){log('gm_dict2 пустой?');gm_busy.set('render-1-2',0);return;}
  log('начинаем render2');tm1();
  readIDB().then((e)=>{var m,i,ew,w,key,p,pp,n=0;//счетчик
    m=document.querySelectorAll('.ww.nw'); //непонятные - нет перевода в мал.словаре
    for(i=0;i<m.length;i++){ew=m[i]; //forEach в старых не работает
      w=''+ew.textContent; key=norm_key(w); p=get_tr(key);//если то ???
      if(p!='??'){//меняем перевод и классы если нашел перевод
        pp='('+p+')'; ew.title=toAttr(p); n++;
        //проверять или try? блок: <s "wb"><s "ww uw">w</s>точка<s "tr">pp</s></s>
        ew.parentElement.children[1].textContent=pp; //экранирует html
        ew.className='ww rw';gm_words.set(key,4);//непонятные теперь редкие, не ищем снова
      } else {log('?? попал в рендер2, это непонятно');}
    }//end for
    el('id_tools').children[6].disabled=false;//разблокируем кнопку
     log('render2 закончен, заменил='+n); stat_words();// статистика
     tm2(); gm_busy.set('render-1-2',0); //сбросим флаг на оба рендера
  }).catch((e)=>{alert('render2:Ошибка='+e);}); //флаг занято не сбросим!
}
//список слов текста + подр.перевод из бол.словаря
function showWords(){//gm_dict2 map:слово-перевод
  tm1();
  const container = el("id_wordsList");
  container.innerHTML = '<button id="close-sw">закрыть</button><hr>';
  var key,tr;
  var keys=get_keys_map(gm_dict2); keys.sort(); //нужна сортировка
  for(key of keys){tr=gm_dict2.get(key);
    const learned=gm_words.get(key);
    const block=document.createElement("div"); block.className= "word-block";
    const title=document.createElement("div");title.className="word-title"+(learned ? " lw" : " uw"); title.textContent = key;
    const transDiv=document.createElement("div");transDiv.className="word-tr"; transDiv.textContent=tr;
    const moreBtn=document.createElement("span");moreBtn.className="btn-more"; moreBtn.textContent="ещё..";
    moreBtn.addEventListener("click",(e)=>{
      transDiv.classList.toggle("expanded");
      moreBtn.textContent = transDiv.classList.contains("expanded") ? "свернуть" : "ещё..";
    });
    block.appendChild(title);block.appendChild(transDiv);block.appendChild(moreBtn);
    container.appendChild(block);
  }
  el('id_mainGrid').style="display:none";
  el('close-sw').addEventListener("click",(e)=>{container.innerHTML='';el('id_mainGrid').style="display:grid";});
  tm2();
}
function dbl_click_word(el_w){var w,p,key,i;//двойной клик на слове
  if(!el_w){log('dbl_click_word: нет элемента ww');return 0;}
  w= ''+el_w.textContent;
  if(!w){log('dbl_click_word: пустое слово');return 0;}
  log('dblclick '+w);key=norm_key(w);
  p=''+el_w.title;//тут кавычки на /
  if(p=='???'){openAddTranslationModal(key);return 1;}// на ??? вводим перевод руками
   i= gm_words.get(key) || 0;
  if(i==0){gm_words.set(key,1);} //uw->lw
  if(i==1){gm_words.set(key,0);} //lw->uw
  if(i==2){gm_words.set(key,1);} //aw->lw
  if(i==3){gm_words.set(key,1);} //nw->lw
  if(i==4){gm_words.set(key,1);} //rw->lw
  mini_render(key); lw_to_LS();//синхронизация с ЛокСт
}
// Modal for manual translation input
function openAddTranslationModal(key){//если ??? то вводит перевод руками
  const modal = el('id_modal');
  el('id_modal-word').textContent = key;
  el('id_modal-input').value = '';
  modal.style.display= 'flex'; modal.setAttribute('aria-hidden','false');
  el('id_modal-input').focus();
  el('id_modal-cancel').addEventListener('click', onCancel);
  el('id_modal-save').addEventListener('click', onSaveClick);
  document.addEventListener('keydown', handler);
  function handler(e){
    if(e.key === 'Escape'){onCancel();}
    if(e.key === 'Enter'){onSaveClick();}
  }
  function onCancel(){removeHandlers();}
  function onSaveClick(){
    const val= el('id_modal-input').value.trim();
    if(!val){alert('Введите перевод'); return 0;}
    gm_dict.set(key,val); mini_render(key); //все слова заменим
    removeHandlers();
    // save to indexedDB фоном
    saveToIDB(key,val).then((e)=>{log('saveToIDB:ok='+e);}).catch((e)=>{alert('saveToIDB:err='+e);});
  }
  function removeHandlers(){
    modal.style.display='none'; modal.setAttribute('aria-hidden','true');
    el('id_modal-cancel').removeEventListener('click', onCancel);
    el('id_modal-save').removeEventListener('click', onSaveClick);
    document.removeEventListener('keydown', handler);
 }
}
function mini_render(key){var i,m,ew,w,p,pp,t,cs;//только по словам
  log('начинаем мини рендер только слово');tm1();
  m=document.querySelectorAll('.ww');
  p=get_tr(key); if(p=='??')gm_words.set(key,3);//неизвестные
  t=toAttr(p); pp='('+p+')';
  if(m[0].title=='???')gm_words.set(key,4);//неизвестные теперь редкие

  i=gm_words.get(key);
  var tr_mode=get_mode();
  cs='ww uw';
  if(i==1){cs='ww lw';if(tr_mode=='only')pp='';}
  if(i==2){cs='ww aw';if(tr_mode=='only')pp='';}
  if(i==3){cs='ww nw';}
  if(i==4){cs='ww rw';}

  for(i=0;i<m.length;i++){
    ew=m[i]; w=''+ew.textContent;
    if(w.trim().toLowerCase()==key){
     ew.title=t; ew.className=cs;
     ew.parentElement.children[1].textContent=pp;//экр html
    }
  }
  stat_words(); // статистика
  log('мини рендер закончен');tm2();
}

//==меню=======
function fTools(p){var k,v,n;
 if(p=='load-lw-LS')lw_from_LS();//Загр список изуч.слов из ЛокСт(замена)
 if(p=='load-lw-js')loadScript('my_words.txt',load_lw);//Загр список изуч.слов из скрипта рядом(замена)
 if(p=='load-lw-file'){gm_busy.set('gm_words',0);loadFromFile(load2_lw_file);}//Загр список изуч.слов из файла(замена)
 if(p== 'add-lw-file'){gm_busy.set('gm_words',1);loadFromFile(load2_lw_file);}//Загр список изуч.слов из файла(добавить)
 if(p=='save-lw-file'){saveToFile('my_words.txt','g_words=`\n'+get_lw().join('\n')+'`;');} //Сохр список изуч.слов в файл(как внеш скрипт, но можно откр в редакторе как текст)
 //формат json хуже, читать/править сложно из за кавычек, размер больше +4 симв на строку
 //Добавить все активные слова в список изуч.слов
 if(p=='add-aw'){n=0;for([k,v] of gm_words)if(k)if(v==2){n++;gm_words.set(k,1);} alert('добавлено '+n+' слов');}
 if(p=='load-big')loader_big_dict();//Загр бол.словарь в inxDB 5мб (перезаписать)
 if(p=='show-big'){showWords();}//Показать перевод (из бол.словаря) всех слов из текста
//открывается стр. со ссылками где брать учебные тексты или создать с актив.словами
 if(p=='gen-text')window.open('gen_text.htm','_blank');//Генерировать текст через чат бота
}
var g_timer; //global
function render(){if(g_timer)clearTimeout(g_timer); g_timer=setTimeout(render1,2000);}
//если текст меняется во время render2 то через 2 сек начнется рендер1, а потом рендер2
//у них один флаг занято, пока рендер2 не закончится, рендер1 не начнется.
function init(){log('init1');
 el('id_mode').addEventListener('change', (e)=>{render();});
 el('id_tools').addEventListener('change', (e)=>{fTools(e.target.value);});
 el('id_dict').addEventListener('change', (e)=>{loadScript(e.target.value,load_dict);});
 el('id_text').addEventListener('input', (e)=>{render();});
 el('id_aw').addEventListener('input', (e)=>{load_aw();});
 el('id_out').addEventListener('dblclick', (e)=>{e.stopPropagation();var el_word = e.target.closest('.ww');if(el_word)dbl_click_word(el_word);});
 el('btnToggleLayout').addEventListener('click', (e)=>{
   //el('id_mainGrid').classList.toggle('full-right');
   /* Переключение левого столбца (развернуть правое) */
   var left = el('id_leftCard'); var grid = el('id_mainGrid');
  if(left.style.display === 'none'){left.style.display='block';grid.style.gridTemplateColumns='1fr 1fr';}
  else {left.style.display='none';grid.style.gridTemplateColumns='1fr';}
 });
 el('btnSpeak').addEventListener('click', (e)=>{text_speak();});// speak button

 lw_from_LS(); //выученные читаем из Локст
 load_aw(); //активные читаем из поля
 load_dict(); //мал.словарь уровня (подключен вначале как скрипт g_dict=`word|tr`)
 openIDB(); //откр IBD один раз
 loadScript('textA2.txt',(e)=>{ //пример текста (необязательно)
   if(window['g_text']){el('id_text').value=g_text; render();}
 });
 //сюда можно добавить загрузку выуч слов из скрипта my_words.txt
}

window.addEventListener('load', init);
window.addEventListener('beforeunload',(e)=>{if(g_IDB)g_IDB.close();lw_to_LS();});//записать выуч в ЛокСт при выходе (синхронизация)

//новая версия от Grok тоже 7мб за 9s, но наверно лучше :)
var g_start = 0; //global
function loader_big_dict2_fast(){
  if(!('g_big_dict' in window)){
    alert('Нет словаря g_big_dict для загрузки в IndexedDB');
    return 0;
  }
  if(gm_busy.get('lbd2')){log('loader_big_dict2 занят'); return 0;}
  gm_busy.set('lbd2', 1); log('Начинаем loader_big_dict2'); tm1();
  if(!g_IDB){alert('IndexedDB не открыта'); gm_busy.set('lbd2', 0); return 0;}

  const batchSize = 1000; // Обрабатываем по 1000 строк за транзакцию
  g_num = 0; // Счётчик записей
  let batch = [];
  g_start=0;

  function processBatch(){
    const tx = g_IDB.transaction("store", "readwrite");
    tx.onerror = (e)=>{alert('Ошибка записи бол.словаря в IndexedDB: ' + e);}
    const store = tx.objectStore("store");
    for(const [key,value] of batch){store.put(value,key);}
    tx.oncomplete = (e)=>{
      g_num += batch.length; batch = []; // Очищаем батник (пакет)
      if(g_start<g_big_dict.length){setTimeout(processNextChunk,0);} //Продолжаем обработку
      else {
        tm2(); g_big_dict=null; alert('Добавлено в IndexedDB:'+g_num+' слов');
        gm_busy.set('lbd2', 0); gm_dict2.clear(); render();
      }
    }
  }
  function processNextChunk(){
    let end,line,key,val;
    while(1){
      end = g_big_dict.indexOf('\n', g_start);
      if(end<0)break; // если у последней нет \n то значит это мусор
      line = g_big_dict.substring(g_start, end).trim();
      g_start = end + 1;
      if(line){
        [key,val] = line.split('|');// |-может и не быть тогда val=undefined
        if(key){// может строка начинается с | значит это дефект словаря
          key = norm_key(key); val = val || '?'; batch.push([key,val.trim()]);
          if(batch.length > batchSize)break;
        }
      }
    }
    if(end<0)g_start= g_big_dict.length+1;
    processBatch();
    //если укорачивать g_big_dict то дольше в два раза!
  }
  // Начинаем обработку
  processNextChunk();
}
function loader_big_dict2_slow(){//7мб за 9s без split
 if(!('g_big_dict' in window)){alert('нет словаря g_big_dict для загрузки в IndexedDB');return 0;}
 if(gm_busy.get('lbd2')){log('loader_big_dict2 занят');return 0;}
 gm_busy.set('lbd2',1);log('начинаем loader_big_dict2');tm1();//ставим занято
//уже открыта
  log('Начало Записи 100000 ключ-значение за одну транзакцию, ~10сек');
  if(g_IDB){
    const tx = g_IDB.transaction("store", "readwrite");
    tx.oncomplete= (e)=>{tm2();g_big_dict=null;alert('добавил в IDB='+g_num);gm_busy.set('lbd2',0);gm_dict2.clear();render();}
    tx.onerror= (e)=>{alert('!Ошибка записи большого словаря'+e);} // занято не сбрасываем

    const store = tx.objectStore("store");
    var n=0,k,v,s,n1=0,n2=0; g_num=0;
    while(1){
      n2=g_big_dict.indexOf('\n',n1);if(n2<0)break;
      s=g_big_dict.substring(n1,n2); n1=n2+1;
      if(s.trim()=='')continue;
      [k,v] = s.split("|"); // key=en, value=ru
      k=norm_key(k); v= v || '?';
      if(k){store.put(v.trim(),k); g_num++;}
    }
   } else alert('IDB не открыта?');
}

function loader_big_dict(){ //грузим1 большой словарь в indexedDB
  loadScript('big_dict.txt',loader_big_dict2_fast); //можно поменять на старый загрузчик
}

//!сравнить с текст1 и текст2 и потом со скриптом новым и проверить скорость
</script>
</body>
</html>











